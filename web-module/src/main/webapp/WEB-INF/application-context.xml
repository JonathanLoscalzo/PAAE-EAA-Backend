<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringSecurityFiltersConfiguredInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <import resource="classpath:service-context.xml"/>

    <mvc:annotation-driven>
        <!--     	<mvc:message-converters> -->
        <!--     		<ref bean="jackson2HttpMessageConverter" /> -->
        <!--     	</mvc:message-converters> -->
    </mvc:annotation-driven>

    <context:annotation-config/>

    <sec:http entry-point-ref="restAuthenticationEntryPoint">
        <sec:intercept-url pattern="/users" access="ROLE_ADMIN, ROLE_EMPLOYEE"/>
        <sec:intercept-url pattern="/clients" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/products" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/products/*/batches" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/suppliers" access="ROLE_ADMIN"/>

        <sec:intercept-url pattern="/**" access="ROLE_ADMIN, ROLE_CLIENT"/>

        <sec:custom-filter ref="customFilter" position="FORM_LOGIN_FILTER"/>
        <sec:logout/>
    </sec:http>


    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="simpleAuthenticationProvider"/>
    </sec:authentication-manager>

    <bean id="customFilter"
          class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="successHandler"/>
        <property name="authenticationFailureHandler" ref="failureHandler"/>
        <property name="passwordParameter" value="password"/>
        <property name="usernameParameter" value="username"/>
        <property name="requiresAuthenticationRequestMatcher">
            <bean class="ar.edu.uai.paradigms.authentication.CustomUrlRequestMatcher">
                <constructor-arg name="filterProcessesUrl" value="/login"/>
            </bean>
        </property>
    </bean>
    <bean id="restAuthenticationEntryPoint"
          class="ar.edu.uai.paradigms.authentication.RestAuthenticationEntryPoint"/>
    <bean id="successHandler"
          class="ar.edu.uai.paradigms.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <constructor-arg name="usuarioService" ref="usuarioService"/>

    </bean>

    <bean id="simpleAuthenticationProvider"
          class="ar.edu.uai.paradigms.authentication.SimpleAuthenticationProvider">
        <constructor-arg name="usuarioService" ref="usuarioService"/>
    </bean>


    <bean id="failureHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>

    <bean id="jackson2HttpMessageConverter"
          class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--     Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

    <bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:ar/edu/uai/config.properties</value>
        </property>
    </bean>


    <!--     CONTROLLERS             -->

    <bean id="personController" class="ar.edu.uai.paradigms.controller.person.PersonController">
        <constructor-arg name="personService" ref="personService"/>
        <constructor-arg name="personTranslator" ref="personTranslator"/>
    </bean>
    <bean id="personTranslator" class="ar.edu.uai.paradigms.translator.person.PersonTranslator"/>

    <bean id="itemController" class="ar.edu.uai.paradigms.controller.item.ItemController">
        <constructor-arg name="itemService" ref="itemService"/>
        <constructor-arg name="itemTranslator" ref="itemTranslator"/>
    </bean>

    <bean id="productoController" class="ar.edu.uai.paradigms.controller.producto.ProductoController">
        <constructor-arg name="productoService" ref="productoService"/>
        <constructor-arg name="productoPorAgotarseTranslator" ref="productoPorAgotarseTranslator"/>
        <constructor-arg name="productoTranslator" ref="productoTranslator"/>
        <constructor-arg name="productoConUnidadesTranslator" ref="productoConUnidadesTranslator"/>
        <property name="proveedorService" ref="proveedorService"/>
    </bean>

    <bean id="proveedorController" class="ar.edu.uai.paradigms.controller.proveedor.ProveedorController">
        <constructor-arg name="service" ref="proveedorService"/>
        <constructor-arg name="translator" ref="proveedorTranslator"/>
    </bean>

    <bean id="loteController" class="ar.edu.uai.paradigms.controller.lote.LoteController">
        <constructor-arg name="loteService" ref="loteService"/>
        <constructor-arg name="loteTranslator" ref="loteTranslator"/>
        <constructor-arg name="productoService" ref="productoService"/>
    </bean>

    <bean id="clienteController" class="ar.edu.uai.paradigms.controller.cliente.ClienteController">
        <constructor-arg name="clienteService" ref="clienteService"/>
        <constructor-arg name="clienteTranslator" ref="clienteTranslator"/>
    </bean>
    <bean id="ventaController" class="ar.edu.uai.paradigms.controller.venta.VentaController">
        <constructor-arg name="service" ref="ventaService"/>
        <constructor-arg name="translator" ref="ventaTranslator"/>
        <property name="ventaDetalleService" ref="ventaDetalleService"/>
        <property name="formaPagoService" ref="formaPagoService"/>
    </bean>

    <bean id="formaPagoController" class="ar.edu.uai.paradigms.controller.venta.FormaPagoController">
        <constructor-arg name="service" ref="formaPagoService"/>
        <constructor-arg name="translator" ref="formaPagoTranslator"/>
    </bean>

    <bean id="usuarioController" class="ar.edu.uai.paradigms.controller.usuario.UsuarioController">
        <constructor-arg name="usuarioService" ref="usuarioService"/>
        <constructor-arg name="usuarioTranslator" ref="usuarioTranslator"/>
    </bean>


    <!--     TRANSLATORS             -->

    <bean id="itemTranslator" class="ar.edu.uai.paradigms.translator.item.ItemTranslator"/>
    <bean id="productoTranslator" class="ar.edu.uai.paradigms.translator.producto.ProductoTranslator">
        <property name="proveedorTranslator" ref="proveedorTranslator"/>
    </bean>
    <bean id="proveedorTranslator" class="ar.edu.uai.paradigms.translator.proveedor.ProveedorTranslator"/>
    <bean id="loteTranslator" class="ar.edu.uai.paradigms.translator.lote.LoteTranslator"/>
    <bean id="clienteTranslator" class="ar.edu.uai.paradigms.translator.cliente.ClienteTranslator"/>
    <bean id="ventaTranslator" class="ar.edu.uai.paradigms.translator.venta.VentaTranslator">
        <property name="ventaDetalleTranslator" ref="ventaDetalleTranslator"/>
        <property name="ventaFormaPagoTranslator" ref="ventaFormaPagoTranslator"/>
        <property name="clienteTranslator" ref="clienteTranslator"/>
        <property name="usuarioTranslator" ref="usuarioTranslator"/>
    </bean>
    <bean id="ventaDetalleTranslator" class="ar.edu.uai.paradigms.translator.venta.VentaDetalleTranslator">
        <property name="productoTranslator" ref="productoTranslator"/>
    </bean>
    <bean id="formaPagoTranslator" class="ar.edu.uai.paradigms.translator.venta.FormaPagoTranslator"/>
    <bean id="ventaFormaPagoTranslator" class="ar.edu.uai.paradigms.translator.venta.VentaFormaPagoTranslator">
        <property name="formaPagoTranslator" ref="formaPagoTranslator"/>
        <property name="ventaTranslator" ref="ventaTranslator"/>
    </bean>
    <bean id="usuarioTranslator" class="ar.edu.uai.paradigms.translator.usuario.UsuarioTranslator"/>
    <bean id="productoConUnidadesTranslator"
          class="ar.edu.uai.paradigms.translator.producto.ProductoConUnidadesTranslator"/>
    <bean id="productoPorAgotarseTranslator"
          class="ar.edu.uai.paradigms.translator.producto.ProductoPorAgotarseTranslator"/>


</beans>